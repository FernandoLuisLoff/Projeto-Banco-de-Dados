
-------- VIEWS --------  

    -------- CREATE VIEW V_PRODUTOS --------
    -- 1o. view que exiba todas todos os produtos comercializados e seu estoque atual.
        CREATE OR REPLACE VIEW V_PRODUTOS
        AS SELECT A.produto, B.qtd_atual
        FROM PRODUTOS A
        INNER JOIN ESTOQUE B ON (A.COD_PRODUTO = B.PRODUTO)
        WHERE B.COD_ESTOQUE IN
        (SELECT MAX(A.COD_ESTOQUE)
        FROM ESTOQUE A
        INNER JOIN PRODUTOS B ON (B.COD_PRODUTO = A.PRODUTO)
        GROUP BY B.PRODUTO);

    -------- CREATE VIEW V_VENDAS --------
    -- 2o. view que exiba todas as vendas realizadas com seus quantidade, produto e qual cliente comprou, ordenadas por data, cliente e produto.
        CREATE OR REPLACE VIEW V_VENDAS 
        AS SELECT C.NOME, D.PRODUTO, B.QTD_VENDIDA
        FROM VENDAS A
        LEFT JOIN PRODUTO_VENDIDO B ON (B.COD_VENDAS = A.COD_VENDAS)
        LEFT JOIN PESSOAS C ON (C.COD_PESSOA = A.PESSOA)
        LEFT JOIN PRODUTOS D ON (D.COD_PRODUTO = B.PRODUTO)
        ORDER BY A.DATA_VENDA, C.NOME, D.PRODUTO;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------- PROCEDURES --------

    -------- PROCEDURES CRUD --------
    -- 4 procedures de CRUD (insert, delete, update e select) da tabela clientes.  

        -------- FUNCTION DE INSERT --------
        CREATE OR REPLACE FUNCTION INS_PESSOA
        (
            VNOME VARCHAR(30),
            VRG VARCHAR(9),
            VCPF_CNPJ VARCHAR(14),
            VSALARIO NUMERIC,
            VRUA VARCHAR(30),
            VNUMERO VARCHAR(5),
            VBAIRRO VARCHAR(30),
            VCEP VARCHAR(8),
            VCODTIPOPESSOA INTEGER,
            VCODCIDADE INTEGER
        ) RETURNS INTEGER AS $$
        DECLARE 
            VCODPESSOA INTEGER;
        BEGIN
            INSERT INTO PESSOAS( NOME, RG, CPF_CNPJ, SALARIO, RUA, NUMERO, BAIRRO, CEP, TIPOS_PESSOA, CIDADE)
            VALUES ( VNOME, VRG, VCPF_CNPJ, VSALARIO, VRUA, VNUMERO, VBAIRRO, VCEP, VCODTIPOPESSOA, VCODCIDADE)
            RETURNING COD_PESSOA INTO VCODPESSOA;
            RETURN VCODPESSOA;
        END;
        $$ LANGUAGE plpgsql;

        -------- FUNCTION DE DELETE --------
        CREATE OR REPLACE FUNCTION DEL_PESSOA
        (
            VCODPESSOA INTEGER
        ) RETURNS INTEGER AS $$
        DECLARE
            VSTATUS INTEGER;
        BEGIN
            DELETE FROM PESSOAS 
            WHERE COD_PESSOA = VCODPESSOA;
            IF (FOUND = TRUE) THEN
                VSTATUS:= 1;
            ELSE
                VSTATUS:= -1;
            END IF;
            RETURN VSTATUS;
        END;
        $$ LANGUAGE plpgsql;

        -------- FUNCTION DE UPDATE --------
        CREATE OR REPLACE FUNCTION UPD_PESSOA
        (
            VCODPESSOA INTEGER,
            VNOME VARCHAR(30),
            VRG VARCHAR(9),
            VCPF_CNPJ VARCHAR(14),
            VSALARIO NUMERIC,
            VRUA VARCHAR(30),
            VNUMERO VARCHAR(5),
            VBAIRRO VARCHAR(30),
            VCEP VARCHAR(8),
            VCODTIPOPESSOA INTEGER,
            VCODCIDADE INTEGER
        ) RETURNS INTEGER AS $$
        DECLARE
            VSTATUS INTEGER;
        BEGIN
            UPDATE PESSOAS 
            SET NOME = VNOME,
                RG = VRG,
                CPF_CNPJ = VCPF_CNPJ,
                SALARIO = VSALARIO,
                RUA = VRUA,
                NUMERO = VNUMERO,
                BAIRRO = VBAIRRO,
                CEP = VCEP,
                TIPOS_PESSOA = VCODTIPOPESSOA,
                CIDADE = VCODCIDADE
            WHERE COD_PESSOA = VCODPESSOA;
            IF (FOUND = TRUE) THEN
                VSTATUS:= 1;
            ELSE
                VSTATUS:= -1;
            END IF;
            RETURN VSTATUS;
        END;
        $$ LANGUAGE plpgsql;

        -------- FUNCTION DE SELECT --------
        CREATE OR REPLACE FUNCTION SEL_PESSOA 
        (
            VCODPESSOA INTEGER DEFAULT NULL,
            VNOME VARCHAR(30) DEFAULT NULL,
            VRG VARCHAR(9) DEFAULT NULL,
            VCPF_CNPJ VARCHAR(14) DEFAULT NULL,
            VSALARIO NUMERIC DEFAULT NULL,
            VRUA VARCHAR(30) DEFAULT NULL,
            VNUMERO VARCHAR(5) DEFAULT NULL,
            VBAIRRO VARCHAR(30) DEFAULT NULL,
            VCEP VARCHAR(8) DEFAULT NULL,
            VCODTIPOPESSOA INTEGER DEFAULT NULL,
            VCODCIDADE INTEGER DEFAULT NULL
        ) RETURNS TABLE (
            RCODPESSOA INTEGER,
            RNOME VARCHAR(30),
            RRG VARCHAR(9),
            RCPF_CNPJ VARCHAR(14),
            RSALARIO NUMERIC,
            RRUA VARCHAR(30),
            RNUMERO VARCHAR(5),
            RBAIRRO VARCHAR(30),
            RCEP VARCHAR(8),
            RCODTIPOPESSOA INTEGER,
            RCODCIDADE INTEGER) AS $$
        BEGIN
            RETURN QUERY SELECT COD_PESSOA,
                NOME,
                RG,
                CPF_CNPJ,
                SALARIO,
                RUA,
                NUMERO,
                BAIRRO,
                CEP,
                TIPOS_PESSOA,
                CIDADE
            FROM PESSOAS
            WHERE ((VCODPESSOA IS NULL) OR (COD_PESSOA = VCODPESSOA))
            AND ((VNOME IS NULL) OR (NOME like VNOME||'%'))
            AND ((VRG IS NULL) OR (RG like VRG||'%'))
            AND ((VCPF_CNPJ IS NULL) OR (CPF_CNPJ like VCPF_CNPJ||'%'))
            AND ((VSALARIO IS NULL) OR (SALARIO = VSALARIO))
            AND ((VRUA IS NULL) OR (RUA like VRUA||'%'))
            AND ((VNUMERO IS NULL) OR (NUMERO like VNUMERO||'%'))
            AND ((VBAIRRO IS NULL) OR (BAIRRO like VBAIRRO||'%'))
            AND ((VCEP IS NULL) OR (CEP like VCEP||'%'))					   
            AND ((VCODTIPOPESSOA IS NULL) OR (TIPOS_PESSOA = VCODTIPOPESSOA))
            AND ((VCODCIDADE IS NULL) OR (CIDADE = VCODCIDADE));
            RETURN;
        END;
        $$ LANGUAGE plpgsql
        CALLED ON NULL INPUT;

-- 1 procedure que receba como parâmetro o nome de um cliente, e imprima todas as vendas que este cliente esta vinculado, e totalize o total que este cliente pagou (somar todas as vendas)

-- 1 procedure que receba como parâmetro um produto e exiba todas as movimentações deste produto (seja venda ou compra) com as quantidades e data.

-------- TRIGGERS --------

    -------- TRIGGER PRODUTO_VENDIDO --------
    -- 1 trigger na tabela produto_vendido que ao fazer um insert, update ou delete faça a atualização do estoque do respectivo produto.

    -------- TRIGGER ATUALIZACAO --------
    -- 1 trigger na tabela lotes que ao fazer um insert, update ou delete faça a atualização do estoque do respectivo produto.

    -------- TRIGGER LOG_TABELA_VENDA --------
    -- 1 trigger de log da tabela venda, deve ser logada toda a operação de realizada na tabela, armazenado o registro anterior, posterior, data e hora, usuário, e qual operação realizada. Criar uma tabela para armazenar este log.

    -------- TRIGGER LOG_TABELA_DESPESAS --------
    -- 1 trigger de log da tabela despesas, deve ser logada toda a operação de realizada na tabela, armazenado o registro anterior, posterior, data e hora, usuário, e qual operação realizada. Criar uma tabela para armazenar este log.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------- INSERTS --------

    -------- INSERTS TABELA ESTADOS --------
        INSERT INTO ESTADOS(NOME,SIGLA) VALUES('PARANA','PR');
        INSERT INTO ESTADOS(NOME,SIGLA) VALUES('SANTA CATARINA','SC');
        INSERT INTO ESTADOS(NOME,SIGLA) VALUES('RIO GRANDE DO SUL','RS');
        INSERT INTO ESTADOS(NOME,SIGLA) VALUES('SAO PAULO','SP');

    -------- INSERTS TABELA CIDADES --------
        INSERT INTO CIDADE(NOME,ESTADO) VALUES('BOM SUCESSO DO SUL', 1);
        INSERT INTO CIDADE(NOME,ESTADO) VALUES('PATO BRANCO', 1);
        INSERT INTO CIDADE(NOME,ESTADO) VALUES('PORTO ALEGRE', 3);

    -------- INSERTS TABELA TIPOS_PESSOA --------
        INSERT INTO TIPOS_PESSOA(TIPO_PESSOA) VALUES('FORNECEDOR');
        INSERT INTO TIPOS_PESSOA(TIPO_PESSOA) VALUES('CLIENTES');
        INSERT INTO TIPOS_PESSOA(TIPO_PESSOA) VALUES('OUTROS');
        INSERT INTO TIPOS_PESSOA(TIPO_PESSOA) VALUES('EMPREGADOS');

    -------- INSERTS TABELA PESSOAS --------
        INSERT INTO PESSOAS(NOME,RG,CPF_CNPJ,SALARIO,RUA,NUMERO,BAIRRO,CEP,TIPOS_PESSOA,CIDADE) VALUES('LOFF SISTEMAS',NULL,'123456789',NULL,'RUA','123','BAIRRO','85555555',1,3);
        INSERT INTO PESSOAS(NOME,RG,CPF_CNPJ,SALARIO,RUA,NUMERO,BAIRRO,CEP,TIPOS_PESSOA,CIDADE) VALUES('FERNANDO','123457','123456789',NULL,'RUA','123','BAIRRO','85555555',2,1);

    -------- INSERTS TABELA PRODUTOS --------
        INSERT INTO PRODUTOS(PRODUTO,PRECO) VALUES('CACHO DE BANANA',10.99);
        INSERT INTO PRODUTOS(PRODUTO,PRECO) VALUES('UM KG DE PICANHA',50.99);
        INSERT INTO PRODUTOS(PRODUTO,PRECO) VALUES('UM LITRO DE PEPSI',8.50);
        INSERT INTO PRODUTOS(PRODUTO,PRECO) VALUES('UM PACOTE DE BOLACHA',6);
        INSERT INTO PRODUTOS(PRODUTO,PRECO) VALUES('UMA DUZIA DE OVOS',8.70);

    -------- INSERTS TABELA TIPO_ESTOQUE --------
        INSERT INTO TIPO_ESTOQUE(DESCRICAO) VALUES('DEPOSITO');
        INSERT INTO TIPO_ESTOQUE(DESCRICAO) VALUES('PRATELEIRA');

    -------- INSERTS TABELA TIPO_MOVIMENTACAO --------
        INSERT INTO TIPO_MOVIMENTACAO(DESCRICAO) VALUES('COLOCADO NO ESTOQUE');
        INSERT INTO TIPO_MOVIMENTACAO(DESCRICAO) VALUES('COLOCADO NA PRATELEIRA');
        INSERT INTO TIPO_MOVIMENTACAO(DESCRICAO) VALUES('VENDIDO');


    -------- INSERTS TABELA LOTES --------
        INSERT INTO LOTES(PRODUTO,QTD_ITENS,FORNECEDOR,DATA_ENTRADA,VECIMENTO) VALUES(1,10,1,'13/10/2022','13/11/2022');
        INSERT INTO LOTES(PRODUTO,QTD_ITENS,FORNECEDOR,DATA_ENTRADA,VECIMENTO) VALUES(2,13.5,1,'13/10/2022','13/11/2022');
        INSERT INTO LOTES(PRODUTO,QTD_ITENS,FORNECEDOR,DATA_ENTRADA,VECIMENTO) VALUES(3,6,1,'13/10/2022','13/05/2023');
        INSERT INTO LOTES(PRODUTO,QTD_ITENS,FORNECEDOR,DATA_ENTRADA,VECIMENTO) VALUES(4,8,1,'13/10/2022','13/05/2023');
        INSERT INTO LOTES(PRODUTO,QTD_ITENS,FORNECEDOR,DATA_ENTRADA,VECIMENTO) VALUES(5,9,1,'13/10/2022','13/11/2022');

    -------- INSERTS TABELA ESTOQUE --------
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(1,1,0,10,10,'13/10/2022',1,1);
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(2,2,0,13.5,13.5,'13/10/2022',1,1);
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(3,3,0,6,6,'13/10/2022',1,1);
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(4,4,0,8,8,'13/10/2022',1,1);
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(5,5,0,9,9,'13/10/2022',1,1);

        -------- PRODUTOS NA PRATELEIRA --------
            UPDATE ESTOQUE SET QTD_ANTERIOR=8, QTD_ATUAL=4, QTD_OPERACAO=4 WHERE COD_ESTOQUE=4;
            INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(4,4,0,4,4,'13/10/2022',2,2);
            UPDATE ESTOQUE SET QTD_ANTERIOR=13.5, QTD_ATUAL=8.5, QTD_OPERACAO=5 WHERE COD_ESTOQUE=2;
            INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO) VALUES(2,2,0,5,5,'13/10/2022',2,2);

    -------- INSERTS TABELA DESPESAS --------
        INSERT INTO DESPESAS(PESSOA,VALOR,MULTA,DATA_DESPESA,VENCIMENTO,DATA_PAGAMENTO,OBSERVACAO) VALUES(1,90,NULL,'13/10/2022','31/10/2022',NULL,'COMPRA DE BANANA');
        INSERT INTO DESPESAS(PESSOA,VALOR,MULTA,DATA_DESPESA,VENCIMENTO,DATA_PAGAMENTO,OBSERVACAO) VALUES(1,72,NULL,'13/10/2022','31/10/2022',NULL,'COMPRA DE OVO');

    -------- INSERTS TABELA VENDAS --------
        INSERT INTO VENDAS(PESSOA,VALOR_TOTAL,DATA_VENDA,OBSERVACAO) VALUES(2,12,'20/10/2022','VENDA DE BOLACHA');
        INSERT INTO VENDAS(PESSOA,VALOR_TOTAL,DATA_VENDA,OBSERVACAO) VALUES(2,100,'21/10/2022','VENDA DE PICANHA');

    -------- INSERTS TABELA PRODUTO_VENDIDO --------
        INSERT INTO PRODUTO_VENDIDO(COD_VENDAS,PRODUTO,QTD_VENDIDA,VALOR_UNITARIO) VALUES(1,4,2,6);
        INSERT INTO PRODUTO_VENDIDO(COD_VENDAS,PRODUTO,QTD_VENDIDA,VALOR_UNITARIO) VALUES(2,2,2,50);

    -------- INSERTS VENDAS NA TABELA ESTOQUE --------
        UPDATE ESTOQUE SET QTD_ANTERIOR=4, QTD_ATUAL=2, QTD_OPERACAO=2 WHERE COD_ESTOQUE=6;
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO,VENDA) VALUES(4,4,0,2,2,'13/10/2022',2,3,1);
        UPDATE ESTOQUE SET QTD_ANTERIOR=5, QTD_ATUAL=3, QTD_OPERACAO=2 WHERE COD_ESTOQUE=7;
        INSERT INTO ESTOQUE(PRODUTO,LOTE,QTD_ANTERIOR,QTD_ATUAL,QTD_OPERACAO,DATA_ESTOQUE,TIPO_ESTOQUE,TIPO_MOVIMENTACAO,VENDA) VALUES(2,2,0,2,2,'13/10/2022',2,3,2);